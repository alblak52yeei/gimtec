'use client';

import { useState, useEffect } from 'react';
import { clsx } from 'clsx';

interface ForecastImageProps {
  forecastId: string;
  mapNumber: number;
  className?: string;
}

export function ForecastImage({ forecastId, mapNumber, className }: ForecastImageProps) {
  const [isLoading, setIsLoading] = useState(true);
  const [hasError, setHasError] = useState(false);

  const imageUrl = `https://services.simurg.space/gim-tec-forecast/get_forecast_image/${forecastId}?shift=${mapNumber - 1}`;

  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ–ø—Å–æ–≤
  useEffect(() => {
    setIsLoading(true);
    setHasError(false);
  }, [forecastId, mapNumber]);

  const handleImageLoad = () => {
    setIsLoading(false);
    setHasError(false);
  };

  const handleImageError = () => {
    setIsLoading(false);
    setHasError(true);
  };

  return (
    <div className={clsx('relative bg-white rounded', className)}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–ª–∞—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      <div className="mb-4">
        <h3 className="text-xl text-primary-800/60 font-normal">
          –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –∫–∞—Ä—Ç—ã #{mapNumber}
        </h3>
      </div>

      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ */}
      <div className="relative w-full bg-gray-100 rounded overflow-hidden">
        {isLoading && (
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="flex flex-col items-center gap-2">
              <div className="w-8 h-8 border-2 border-primary-500 border-t-transparent rounded-full animate-spin" />
              <span className="text-sm text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...</span>
            </div>
          </div>
        )}

        {hasError && (
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="flex flex-col items-center gap-2 text-center p-4">
              <div className="w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center">
                <span className="text-gray-500 text-xl">üì∑</span>
              </div>
              <span className="text-sm text-gray-500">
                –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              </span>
              <span className="text-xs text-gray-400">
                –ü—Ä–æ–≥–Ω–æ–∑ ID: {forecastId}, –ö–∞—Ä—Ç–∞: {mapNumber}
              </span>
            </div>
          </div>
        )}

        {/* –°–∞–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
        <img
          key={`${forecastId}-${mapNumber}`}
          src={imageUrl}
          alt={`–ü—Ä–æ–≥–Ω–æ–∑ –∫–∞—Ä—Ç—ã ${mapNumber} –¥–ª—è ID ${forecastId}`}
          onLoad={handleImageLoad}
          onError={handleImageError}
          className={clsx(
            'w-full h-full object-contain transition-opacity duration-300',
            isLoading || hasError ? 'opacity-0' : 'opacity-100'
          )}
        />
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ */}
      <div className="mt-3 text-xs text-gray-500">
        <p>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {mapNumber} –∏–∑ 24</p>
      </div>
    </div>
  );
} 